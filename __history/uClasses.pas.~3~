unit uClasses;

interface
uses sysutils;
type
  TConta = class
  private
    FcontaAtiva: boolean;
    Fsaldo: real;
    Flimite: real;
    Ftipo: string;
    procedure SetcontaAtiva(const Value: boolean);
    procedure Setlimite(const Value: real);
    procedure Setsaldo(const Value: real);
    procedure Settipo(const Value: string);
  public
   function CancelarConta:boolean;
   procedure deposito(aDeposito);
   procedure saque(aDeposito);
  published
    property tipo:string read Ftipo write Settipo;
    property limite:real read Flimite write Setlimite;
    property saldo:real read Fsaldo write Setsaldo;
    property contaAtiva:boolean read FcontaAtiva write SetcontaAtiva;
    procedure Historico;
  end;
  TGerente = class
  private
    Femail: string;
    Fagencia: integer;
    Fnome: string;
    Fendereco: string;
    Ftelefone: integer;
    procedure Setagencia(const Value: integer);
    procedure Setemail(const Value: string);
    procedure Setendereco(const Value: string);
    procedure Setnome(const Value: string);
    procedure Settelefone(const Value: integer);
  published
    property nome:string read Fnome write Setnome;
    property endereco:string read Fendereco write Setendereco;
    property telefone:integer read Ftelefone write Settelefone;
    property email:string read Femail write Setemail;
    property agencia:integer read Fagencia write Setagencia;
  end;
implementation

{ TConta }
{$region}
function TConta.CancelarConta: boolean;
begin

end;

procedure TConta.deposito(aDeposito);
begin

end;

procedure TConta.Historico;
begin

end;

procedure TConta.saque(aDeposito);
begin

end;

procedure TConta.SetcontaAtiva(const Value: boolean);
begin
  FcontaAtiva := Value;
end;

procedure TConta.Setlimite(const Value: real);
begin
  Flimite := Value;
end;

procedure TConta.Setsaldo(const Value: real);
begin
  Fsaldo := Value;
end;

procedure TConta.Settipo(const Value: string);
begin
  Ftipo := Value;
end;
{$endregion}
{ TGerente }
{$region}
procedure TGerente.Setagencia(const Value: integer);
begin
  Fagencia := Value;
end;

procedure TGerente.Setemail(const Value: string);
begin
  Femail := Value;
end;

procedure TGerente.Setendereco(const Value: string);
begin
  Fendereco := Value;
end;

procedure TGerente.Setnome(const Value: string);
begin
  Fnome := Value;
end;

procedure TGerente.Settelefone(const Value: integer);
begin
  Ftelefone := Value;
end;
{$endregion}
end.

